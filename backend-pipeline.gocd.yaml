format_version: 10
pipelines:
  backend-deployment:
    group: deployment-group
    label_template: ${COUNT}
    lock_behavior: none
    display_order: 1
    materials:
      git-backend:
        git: https://github.com/suryaveerubhotla/simple-ui.git
        shallow_clone: false
        auto_update: true
        branch: main
    stages:
      - Check-Deployment-Type:
          fetch_materials: true
          clean_workspace: false
          approval:
            type: auto
          jobs:
            check-dir:
              tasks:
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - |
                        export BE_TARGET_DIR=/home/ubuntu/prime-square
                        if [ -d "${BE_TARGET_DIR}" ]; then
                          echo "Non-Fresh Deployment"
                          export DEPLOY_TYPE=non-fresh
                        else
                          echo "Fresh Deployment"
                          export DEPLOY_TYPE=fresh
                        fi
              environment_variables:
                DEPLOY_TYPE: ""

      - Prepare-Build-Environment:
          fetch_materials: false
          clean_workspace: false
          approval:
            type: auto
          jobs:
            prepare-build:
              tasks:
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - |
                        export BUILD_DIR=/home/ubuntu/builds
                        if [ ! -d "${BUILD_DIR}" ]; then
                          mkdir -p "${BUILD_DIR}" || { echo "Failed to create BUILD_DIR"; exit 1; }
                          sudo chown -R $(whoami):$(whoami) "${BUILD_DIR}"
                          sudo chmod -R 755 "${BUILD_DIR}"
                        fi

                        echo "Checking for existing ps_be_*.zip files..."
                        if ls "${BUILD_DIR}/ps_be_*.zip" > /dev/null 2>&1; then
                          echo "Removing existing zip files..."
                          sudo rm -f "${BUILD_DIR}/ps_be_*.zip" || { echo "Failed to remove zip files"; exit 1; }
                        fi

                        echo "Fetching zip file from SFTP..."
                        export SFTP_HOST=172.16.7.116
                        export SFTP_USER=surya
                        export SFTP_UPLOADS_DIR=uploads
                        sftp -o StrictHostKeyChecking=no -i /var/go/.ssh/id_rsa ${SFTP_USER}@${SFTP_HOST} <<EOF
                        cd ${SFTP_UPLOADS_DIR}
                        get ps_be_*.zip ${BUILD_DIR}/
                        bye
                        EOF

      - Deploy-Backend:
          fetch_materials: false
          clean_workspace: false
          approval:
            type: auto
          jobs:
            deploy:
              tasks:
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - |
                        export DEPLOY_TYPE="${DEPLOY_TYPE:-fresh}"
                        export BE_TARGET_DIR=/home/ubuntu/prime-square
                        export SERVICE=PrimeSquare.service
                        export BE_ARCHIVE_DIR=/home/ubuntu/archive
                        export BACKUPS=/home/ubuntu/backups
                        export BUILD_DIR=/home/ubuntu/builds

                        if [ "$DEPLOY_TYPE" = "fresh" ]; then
                          export BE_TARGET_DIR=/home/ubuntu/prime-square
                          export SERVICE=PrimeSquare.service

                          echo "Creating BE_TARGET_DIR..."
                          mkdir -p "${BE_TARGET_DIR}"
                          sudo chown -R go:go "${BE_TARGET_DIR}"  # Ensure go-agent has correct permissions

                          echo "Unzipping backend artifacts..."
                          unzip -o "${BUILD_DIR}/ps_be_*.zip" -d "${BE_TARGET_DIR}"

                          echo "Setting up service..."
                          if [ ! -f /etc/systemd/system/${SERVICE} ]; then
                            sudo cp "${BE_TARGET_DIR}/service/${SERVICE}" /etc/systemd/system/
                            sudo systemctl enable ${SERVICE}
                          fi

                          echo "Starting service..."
                          sudo systemctl daemon-reload
                          sudo systemctl start ${SERVICE}
                          sudo systemctl status ${SERVICE}
                        fi

            deploy-non-fresh:
              tasks:
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - |
                        if [ "$DEPLOY_TYPE" = "non-fresh" ]; then
                          export BE_TARGET_DIR=/home/ubuntu/prime-square
                          export BE_ARCHIVE_DIR=/home/ubuntu/archive
                          export BACKUPS=/home/ubuntu/backups
                          export SERVICE=PrimeSquare.service

                          echo "Stopping service..."
                          sudo systemctl stop ${SERVICE}

                          echo "Backing up existing JAR files..."
                          mkdir -p "${BACKUPS}"
                          mv "${BE_TARGET_DIR}/*.jar" "${BACKUPS}/"

                          echo "Extracting new artifacts..."
                          unzip -o "${BUILD_DIR}/ps_be_*.zip" -d "${BE_ARCHIVE_DIR}"
                          find "${BE_ARCHIVE_DIR}" -name "*.jar" -exec cp {} "${BE_TARGET_DIR}" \;

                          echo "Starting service..."
                          sudo systemctl start ${SERVICE}
                          sudo systemctl status ${SERVICE}
                        fi

      - Execute-Database-Scripts:
          fetch_materials: false
          clean_workspace: false
          approval:
            type: auto
          jobs:
            db-scripts:
              tasks:
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - |
                        export DEPLOY_TYPE="${DEPLOY_TYPE:-fresh}"
                        if [ "$DEPLOY_TYPE" = "fresh" ]; then
                          export DB_SCRIPTS_DIR=/home/ubuntu/prime-square/database-scripts
                          export DB_USER=psdbadmin
                          export DB_PASS=6%EOm@Te1sb19Th6

                          echo "Executing database scripts..."
                          mysql < "${DB_SCRIPTS_DIR}/ddl_drop_schema_script.sql" -u ${DB_USER} -p${DB_PASS}
                          mysql < "${DB_SCRIPTS_DIR}/idfc_primesquare_workflow_ddl_dml.sql" -u ${DB_USER} -p${DB_PASS}
                          mysql < "${DB_SCRIPTS_DIR}/ddl_create_scripts.sql" -u ${DB_USER} -p${DB_PASS}
                          mysql < "${DB_SCRIPTS_DIR}/dml_insert_scripts.sql" -u ${DB_USER} -p${DB_PASS}
                          mysql < "${DB_SCRIPTS_DIR}/ps_index_create.sql" -u ${DB_USER} -p${DB_PASS}
                        else
                          echo "Skipping database scripts for non-fresh deployment."
                        fi

environments:
  Frontandbackend:
    pipelines:
      - backend-deployment
    environment_variables:
      DEPLOY_TYPE: ""

