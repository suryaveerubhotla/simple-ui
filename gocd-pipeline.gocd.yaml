format_version: 10
pipelines:
  GOCD-pipeline-as-code:
    group: defaultGroup
    label_template: ${COUNT}
    lock_behavior: none
    display_order: -1
    environment_variables:
      ENVIRONMENT_NAME: deployandtest
      TARGET_DIR: /home/surya/prime-square
      SERVER_IP: 172.16.7.113
      AGENT_IP: 172.16.7.119
      SSH_KEY_FILE: /home/ubuntu/.ssh/id_rsa 
      WORKSPACE: /var/lib/go-agent/pipelines/JarDeploymentPipeline
      
    materials:
      git-c05074b:
        git: https://github.com/suryaveerubhotla/simple-ui.git
        shallow_clone: false
        auto_update: true
        branch: main
    stages:
      - DeployAndTest:
          fetch_materials: true
          keep_artifacts: false
          clean_workspace: false
          approval:
            type: success
          jobs:
            run-commands:
              timeout: 0
              resources:
                - surya
              tasks:
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - |
                        echo "Creating target directory on the agent..." && \
                        ssh -i "${SSH_KEY_FILE}" ubuntu@${AGENT_IP} "mkdir -p ${TARGET_DIR}" && \
                        echo "Copying HelloWorld.jar to the agent..." && \
                        scp -i "${SSH_KEY_FILE}" /home/ubuntu/HelloWorld.jar ubuntu@${AGENT_IP}:${TARGET_DIR}/ && \
                        echo "HelloWorld.jar copied successfully." && \
                        ssh -i "${SSH_KEY_FILE}" ubuntu@${AGENT_IP} "chmod 755 ${TARGET_DIR}/HelloWorld.jar && echo 'File permissions set.'"
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - |
                        echo "Restarting apache2 service on the agent..." && \
                        ssh -i "${SSH_KEY_FILE}" ubuntu@${AGENT_IP} "sudo systemctl restart apache2" && \
                        echo "Apache2 service restarted successfully."

environments:
  deployandtest:
    pipelines:
      - GOCD-pipeline-as-code
