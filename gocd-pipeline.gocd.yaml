format_version: 10
pipelines:
  GOCD-pipeline-as-code:
    group: defaultGroup
    label_template: ${COUNT}
    lock_behavior: none
    display_order: -1
    materials:
      git-c05074b:
        git: https://github.com/suryaveerubhotla/simple-ui.git
        shallow_clone: false
        auto_update: true
        branch: main
    stages:
      - Deploy-and-test:
          fetch_materials: true
          keep_artifacts: false
          clean_workspace: false
          approval:
            type: manual
            allow_only_on_success: false
          jobs:
            run-commands:
              timeout: 0
              variables:
                BUILD_DIR: /home/ubuntu/builds
                TARGET_DIR: /home/surya/prime-square
                ARCHIVE_DIR: /home/ubuntu/archive
                TEMP_DIR: ${ARCHIVE_DIR}/temp-extract
                REMOTE_HOST: 172.16.7.119
                REMOTE_USER: surya
                SERVICE: PrimeSquare.service
              tasks:
                - exec:
                    command: sudo
                    arguments:
                      - systemctl
                      - stop
                      - PrimeSquare.service
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - |
                        echo "Exporting environment variables..."
                        export BUILD_DIR=/home/ubuntu/builds
                        export TARGET_DIR=/home/surya/prime-square
                        export ARCHIVE_DIR=/home/ubuntu/archive
                        export TEMP_DIR=${ARCHIVE_DIR}/temp-extract
                        export REMOTE_HOST=172.16.7.119
                        export REMOTE_USER=surya

                        echo "Processing build..."
                        if [ ! -d "${BUILD_DIR}" ]; then
                          echo "Build directory ${BUILD_DIR} does not exist!"
                          exit 1
                        fi

                        LATEST_BUILD=$(ls -t ${BUILD_DIR}/*.zip 2>/dev/null | head -n 1)

                        if [ -z "${LATEST_BUILD}" ]; then
                          echo "No builds found in ${BUILD_DIR}!"
                          exit 1
                        fi

                        echo "Found latest build: ${LATEST_BUILD}"

                        mkdir -p "${TEMP_DIR}" "${ARCHIVE_DIR}" || { echo "Failed to create directories"; exit 1; }

                        echo "Extracting build to temporary directory..."
                        unzip -o "${LATEST_BUILD}" -d "${TEMP_DIR}" || { echo "Failed to unzip build"; exit 1; }

                        echo "Preparing target directory on remote server..."
                        ssh ${REMOTE_USER}@${REMOTE_HOST} "mkdir -p ${TARGET_DIR} || { echo 'Failed to create ${TARGET_DIR}'; exit 1; }"

                        echo "Copying core-*.jar to target server..."
                        JAR_FILE=$(find "${TEMP_DIR}" -type f -name "core-*.jar" | head -n 1)

                        if [ -z "${JAR_FILE}" ]; then
                          echo "No core-*.jar file found in the extracted build!"
                          exit 1
                        fi

                        scp "${JAR_FILE}" ${REMOTE_USER}@${REMOTE_HOST}:${TARGET_DIR}/ || { echo "Failed to copy JAR file"; exit 1; }

                        echo "Cleaning up temporary directory..."
                        rm -rf "${TEMP_DIR}" || { echo "Failed to clean up"; exit 1; }

                        echo "Build processing complete."
                - exec:
                    command: ssh
                    arguments:
                      - surya@172.16.7.119
                      - sudo
                      - systemctl
                      - restart
                      - PrimeSquare.service
              run_if: passed
environments:
  deployandtest:
    pipelines:
      - GOCD-pipeline-as-code
