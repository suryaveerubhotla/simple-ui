format_version: 10
pipelines:
  replacing-jar:
    group: deployment-group
    label_template: ${COUNT}
    lock_behavior: none
    display_order: -1
    materials:
      git-c05074b:
        git: https://github.com/suryaveerubhotla/simple-ui.git
        shallow_clone: false
        auto_update: true
        branch: main
    stages:
      - Deploy-and-test:
          fetch_materials: true
          keep_artifacts: false
          clean_workspace: false
          approval:
            type: manual
            allow_only_on_success: false
          jobs:
            run-commands:
              timeout: 0
              tasks:
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - |
                        echo "Exporting environment variables..."
                        export BUILD_DIR=/home/ubuntu/builds
                        export BE_TARGET_DIR=/home/ubuntu/prime-square
                        export BACKUP_DIR=/home/ubuntu/prime-square-backup
                        export BE_ARCHIVE_DIR=/home/ubuntu/archive/
                        export SERVICE=PrimeSquare.service
                        export DB_SCRIPTS_DIR=/home/ubuntu/prime-square/database-scripts
                        export DB_USER=psdbadmin
                        export DB_PASS=6%EOm@Te1sb19Th6
                        export SFTP_HOST=192.168.56.106
                        export SFTP_USER=surya
                        export SFTP_KEY=/var/go/.ssh/id_rsa
                        export SFTP_UPLOADS_DIR=uploads

                        echo "Checking and creating BUILD_DIR if needed..."
                        if [ ! -d "${BUILD_DIR}" ]; then
                          echo "BUILD_DIR does not exist. Creating ${BUILD_DIR}..."
                          sudo mkdir -p "${BUILD_DIR}" && sudo chmod 755 "${BUILD_DIR}" || { echo "Failed to create ${BUILD_DIR}"; exit 1; }
                        fi

                        echo "Checking for BE_ARCHIVE_DIR..."
                        if [ ! -d "${BE_ARCHIVE_DIR}" ]; then
                          echo "BE_ARCHIVE_DIR does not exist. Creating ${BE_ARCHIVE_DIR}..."
                          sudo mkdir -p "${BE_ARCHIVE_DIR}" && sudo chmod 755 "${BE_ARCHIVE_DIR}" || { echo "Failed to create ${BE_ARCHIVE_DIR}"; exit 1; }
                        fi

                        echo "Checking for BACKUP_DIR..."
                        if [ ! -d "${BACKUP_DIR}" ]; then
                          echo "BACKUP_DIR does not exist. Creating ${BACKUP_DIR}..."
                          sudo mkdir -p "${BACKUP_DIR}" && sudo chmod 755 "${BACKUP_DIR}" || { echo "Failed to create ${BACKUP_DIR}"; exit 1; }
                        fi

                        echo "Checking for backend zip file in BUILD_DIR..."
                        BE_ZIP=$(ls ${BUILD_DIR}/ps_be*.zip 2>/dev/null | head -n 1)
                        if [ -z "${BE_ZIP}" ]; then
                          echo "No backend zip file found in ${BUILD_DIR}! Exiting."
                          exit 1
                        else
                          echo "Found backend zip: ${BE_ZIP}"
                          echo "Unzipping backend.zip..."
                          sudo unzip -o "${BE_ZIP}" -d "${BE_ARCHIVE_DIR}" || { echo "Failed to unzip backend zip file"; exit 1; }
                        fi

                        echo "Setting permissions for BE_ARCHIVE_DIR..."
                        sudo chmod -R 755 "${BE_ARCHIVE_DIR}" || { echo "Failed to set permissions for ${BE_ARCHIVE_DIR}"; exit 1; }

                        echo "Moving JAR files from BE_TARGET_DIR to BACKUP_DIR if any..."
                        if [ -d "${BE_TARGET_DIR}" ]; then
                          JAR_FILES=$(find "${BE_TARGET_DIR}" -maxdepth 1 -type f -name "core-*.jar")
                          if [ -n "${JAR_FILES}" ]; then
                            for jar in ${JAR_FILES}; do
                              sudo mv "$jar" "${BACKUP_DIR}" || { echo "Failed to move $jar to BACKUP_DIR."; exit 1; }
                            done
                          fi
                        else
                          echo "BE_TARGET_DIR does not exist."
                        fi

                        echo "Copying new JAR file to BE_TARGET_DIR..."
                        JAR_FILE=$(find "${BE_ARCHIVE_DIR}" -type f -name "core-*.jar" | head -n 1)
                        if [ -z "${JAR_FILE}" ]; then
                          echo "No core-*.jar found in ${BE_ARCHIVE_DIR}! Exiting."
                          exit 1
                        fi
                        sudo cp "${JAR_FILE}" "${BE_TARGET_DIR}" || { echo "Failed to copy JAR file"; exit 1; }

                        echo "Reloading systemd and starting service..."
                        sudo systemctl daemon-reload
                        sudo systemctl start ${SERVICE}
                        sudo systemctl enable ${SERVICE}
                        sudo systemctl status ${SERVICE}

environments:
  Frontandbackend:
    pipelines:
      - replacing-jar
