format_version: 10
pipelines:
  replacing-jar:
    group: deployment-group
    label_template: ${COUNT}
    lock_behavior: none
    display_order: -1
    materials:
      git-c05074b:
        git: https://github.com/suryaveerubhotla/simple-ui.git
        shallow_clone: false
        auto_update: true
        branch: main
    stages:
      - Deploy-and-test:
          fetch_materials: true
          keep_artifacts: false
          clean_workspace: false
          approval:
            type: manual
            allow_only_on_success: false
          jobs:
            run-commands:
              timeout: 0
              tasks:
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - |
                        echo "Exporting environment variables..."
                        export BUILD_DIR=/home/ubuntu/builds
                        export BE_TARGET_DIR=/home/ubuntu/prime-square                      
                        export BE_ARCHIVE_DIR=/home/ubuntu/archive/temp-extract
                        export SERVICE=PrimeSquare.service
                        export DB_SCRIPTS_DIR=/home/ubuntu/prime-square/database-scripts
                        export DB_USER=psdbadmin
                        export DB_PASS=6%EOm@Te1sb19Th6
                        export SFTP_HOST=172.16.7.116
                        export SFTP_USER=surya
                        export SFTP_KEY=/var/go/.ssh/id_rsa
                        export SFTP_UPLOADS_DIR=uploads

                        echo "Checking and creating BUILD_DIR if needed..."
                          if [ ! -d "${BUILD_DIR}" ]; then
                            echo "BUILD_DIR does not exist. Creating ${BUILD_DIR}..."
                            mkdir -p "${BUILD_DIR}" || { echo "Failed to create ${BUILD_DIR}"; exit 1; }
                          else
                            echo "BUILD_DIR exists. Using existing ${BUILD_DIR}..."
                          fi
 
                          echo "Checking for existing backend files in BUILD_DIR..."
                          if ls "${BUILD_DIR}/ps_be_*.zip" > /dev/null 2>&1; then
                            echo "Found existing ps_be_*.zip files. Removing them..."
                            sudo rm -f "${BUILD_DIR}/ps_be_*.zip" || { echo "Failed to remove existing zip files"; exit 1; }
                          else
                          echo "No existing ps_be_*.zip files found. Proceeding..."
                          fi

                        echo "Accessing SFTP machine to fetch the backend zip file..."
                        sftp -o StrictHostKeyChecking=no -i /var/go/.ssh/id_rsa ${SFTP_USER}@${SFTP_HOST} <<EOF
                        cd ${SFTP_UPLOADS_DIR} 
                        get ps_be_*.zip ${BUILD_DIR}
                        bye
                        EOF
 
                          if [ $? -ne 0 ]; then
                            echo "Failed to fetch backend.zip from SFTP."
                            exit 1
                          fi  
 
                          echo "Checking if service ${SERVICE} exists..."
                          if [ -f /etc/systemd/system/${SERVICE} ]; then
                            echo "${SERVICE} exists. Checking service status..."
                            sudo systemctl status ${SERVICE} > /dev/null 2>&1
                            if [ $? -eq 0 ]; then
                              echo "${SERVICE} is running. Stopping the service..."
                              sudo systemctl stop ${SERVICE} || { echo "Failed to stop ${SERVICE}"; exit 1; }
                            else
                              echo "${SERVICE} is not running."
                            fi
                          else
                            echo "${SERVICE} does not exist. Proceeding..."
                          fi

                        echo "Checking for BE_ARCHIVE_DIR and Archiving existing core JAR..."
                          if [ ! -d "${BE_ARCHIVE_DIR}" ]; then
                            echo "BE_ARCHIVE_DIR does not exist. Creating ${BE_ARCHIVE_DIR}..."
                            mkdir -p "${BE_ARCHIVE_DIR}" || { echo "Failed to create ${BE_ARCHIVE_DIR}"; exit 1; }
                          else
                            echo "BE_ARCHIVE_DIR exists. Using existing ${BE_ARCHIVE_DIR}..."
                          fi
                        sudo mv /home/ubuntu/prime-square/core-*.jar /home/ubuntu/archive/core-$(date +%F-%T).jar || { echo "Failed to archive core JAR"; exit 1; }
 
                        echo "Processing backend (ps_be)..."
                        BE_ZIP=$(ls ${BUILD_DIR}/ps_be*.zip 2>/dev/null | head -n 1)

                        if [ -z "${BE_ZIP}" ]; then
                          echo "No ps_be zip file found in ${BUILD_DIR}!"
                          exit 1
                        fi

                        echo "Found backend zip: ${BE_ZIP}"
                        mkdir -p "${BE_ARCHIVE_DIR}" || { echo "Failed to create backend directories"; exit 1; }
                        unzip -o "${BE_ZIP}" -d "${BE_ARCHIVE_DIR}" || { echo "Failed to unzip ps_be"; exit 1; }
                        JAR_FILE=$(find "${BE_TEMP_DIR}" -type f -name "core-*.jar" | head -n 1)
                        if [ -z "${JAR_FILE}" ]; then
                          echo "No core-*.jar file found in the ps_be zip!"
                          exit 1
                        fi

                          echo "Checking for BE_TARGET_DIR..."
                          if [ ! -d "${BE_TARGET_DIR}" ]; then
                            echo "BE_TARGET_DIR does not exist"
                          else
                            echo "BE_TARGET_DIR exists. Using ${BE_TARGET_DIR}..."
                            cp "${JAR_FILE}" "${BE_TARGET_DIR}" || { echo "Failed to copy JAR file"; exit 1; }
                            rm -rf "${BE_ARCHIVE_DIR}" || { echo "Failed to clean up BE temp dir"; exit 1; }
                          fi 
           
                          echo "Replacing core JAR..."
                          sudo mv /home/ubuntu/archive/core-*.jar /home/ubuntu/prime-square/ || { echo "Failed to replace core JAR"; exit 1; }
 
                          echo "Listing extracted files in BE_TARGET_DIR..."
                          ls -l "${BE_TARGET_DIR}"               
 
                          echo "Checking and copying service file if needed..."

                          if [ ! -f /etc/systemd/system/${SERVICE} ]; then
                            sudo cp "${BE_TARGET_DIR}/service/${SERVICE}" /etc/systemd/system/ || { echo "Failed to copy service file"; exit 1; }
 
                          echo "Enabling the service..."
                            sudo systemctl enable ${SERVICE} || { echo "Failed to enable ${SERVICE}"; exit 1; }
 
                          else
                            echo "Service file already exists. Skipping copy."
                          fi
 
                          echo "Making wrapper.sh executable..."
                          sudo chmod +x "${BE_TARGET_DIR}/wrapper.sh" || { echo "Failed to make wrapper.sh executable"; exit 1; }
 
                          echo "Reloading systemd daemon..."
                          sudo systemctl daemon-reload || { echo "Failed to reload systemd daemon"; exit 1; }
 
                          echo "Deployment complete."
                          echo "Enabling the service"
                          sudo systemctl enable PrimeSquare.service
                          echo "Starting the service"
                          sudo systemctl start PrimeSquare.service  
                       
environments:
  Frontandbackend:
    pipelines:
      - replacing-jar
