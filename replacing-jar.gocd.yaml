format_version: 10
pipelines:
  replacing-jar:
    group: deployment-group
    label_template: ${COUNT}
    lock_behavior: none
    display_order: -1
    materials:
      git-c05074b:
        git: https://github.com/suryaveerubhotla/simple-ui.git
        shallow_clone: false
        auto_update: true
        branch: main
    stages:
      - Deploy-and-test:
          fetch_materials: true
          keep_artifacts: false
          clean_workspace: false
          approval:
            type: manual
            allow_only_on_success: false
          jobs:
            run-commands:
              timeout: 0
              tasks:
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - |
                        echo "Exporting environment variables..."
                        export BUILD_DIR=/home/ubuntu/builds
                        export BE_TARGET_DIR=/home/ubuntu/prime-square
                        export BACKUP_DIR=/home/ubuntu/prime-square-backup
                        export BE_ARCHIVE_DIR=/home/ubuntu/archive
                        export SERVICE=PrimeSquare.service
                        export SFTP_HOST=172.16.7.116
                        export SFTP_USER=surya
                        export SFTP_KEY=/var/go/.ssh/id_rsa
                        export SFTP_UPLOADS_DIR=uploads

                        echo "creating BUILD_DIR and BACKUP_DIR"
                        mkdir -p "${BUILD_DIR}"
                        mkdir -p "${BACKUP_DIR}"

                        echo "Remove old backend zip files"
                        sudo rm -f "${BUILD_DIR}/ps_be_*.zip"

                        echo "Fetch backend zip file from SFTP"
                        sftp -o StrictHostKeyChecking=no -i "${SFTP_KEY}" "${SFTP_USER}@${SFTP_HOST}" <<EOF
                        cd ${SFTP_UPLOADS_DIR}
                        get ps_be_*.zip ${BUILD_DIR}
                        bye
                        EOF

                        if [ $? -ne 0 ]; then
                          echo "Failed to fetch backend zip file from SFTP."
                          exit 1
                        fi

                        echo "Stopping service ${SERVICE} if running..."
                        if systemctl is-active --quiet ${SERVICE}; then
                          sudo systemctl stop ${SERVICE}
                        fi

                        echo "Ensuring archive directory exists..."
                        mkdir -p "${BE_ARCHIVE_DIR}"

                        BE_ZIP=$(ls ${BUILD_DIR}/ps_be*.zip 2>/dev/null | head -n 1)
                        if [ -z "${BE_ZIP}" ]; then
                          echo "No ps_be zip file found in ${BUILD_DIR}!"
                          exit 1
                        fi
                        echo "Unzipping backend zip file..."
                        unzip -o "${BE_ZIP}" -d "${BE_ARCHIVE_DIR}"

                        echo "ownership permission for BUILD_DIR and BACKUP_DIR "
                        sudo chown -R ubuntu:ubuntu "${BUILD_DIR}" || { echo "Failed to change ownership of BUILD_DIR"; exit 1; }
                        sudo chown -R ubuntu:ubuntu "${BACKUP_DIR}" || { echo "Failed to change ownership of BACKUP_DIR"; exit 1; }

                        echo "Check for JAR file"
                        JAR_FILE=$(find "${BE_ARCHIVE_DIR}" -type f -name "core-*.jar" | head -n 1)
                        if [ -z "${JAR_FILE}" ]; then
                          echo "No core-*.jar file found in the archive!"
                          exit 1
                        fi

                        echo "Backup existing JAR file"
                        if ls "${BE_TARGET_DIR}/core-*.jar" > /dev/null 2>&1; then
                          echo "Backing up existing JAR file..."
                          sudo mv "${BE_TARGET_DIR}/core-*.jar" "${BACKUP_DIR}/core-$(date +%F-%T).jar" || { echo "Failed to backup core JAR"; exit 1; }
                          echo "Backup created at ${BACKUP_DIR}/core-${TIMESTAMP}.jar"
                        fi

                        echo "Copying new JAR file to target directory..."
                        sudo cp "${JAR_FILE}" "${BE_TARGET_DIR}" || { echo "Failed to copy new JAR file"; exit 1; }

                        echo "Cleaning up archive directory..."
                        sudo rm -rf "${BE_ARCHIVE_DIR}/*" || { echo "Failed to clean up archive directory"; exit 1; }

                        echo "Copy and enable service file if necessary"
                        if [ ! -f /etc/systemd/system/${SERVICE} ]; then
                          echo "Copying service file..."
                          sudo cp "${BE_TARGET_DIR}/service/${SERVICE}" /etc/systemd/system/
                          sudo systemctl enable ${SERVICE}
                        fi

                        echo "Reloading systemd and restarting service..."
                        sudo systemctl daemon-reload
                        sudo systemctl start ${SERVICE}
                        sudo systemctl status ${SERVICE}
environments:
  Frontandbackend:
    pipelines:
      - replacing-jar